<launch>

  <!-- General args -->
  <arg name="use_sim_time" default="true" description="Use simulation time when replaying rosbags with '--clock' option."/>
  <arg name="outdoor" default="true" description="Decide which set of parameters to use"/>
  <arg name="rviz" default="true" description="Visualize results with RViz."/>
  <arg name="vlp16_driver" default="false" description="If true, start Velodyne driver."/>
  <arg name="gps" default="false" description="If true, use GPS data to calibrate SLAM output. Otherwise, provide calibration."/>
  <arg name="tags_topic" default="tag_detections" description="topic from which to get the tag measurements"/>
  <!-- Velodyne driver parameters -->
  <arg name="device_ip" default="" />
  <arg name="port" default="2368" />
  <arg name="pcap" default="" />
  <!-- /!\ rpm and timestamp_first_packet are also used to generate approximate point-wise timestamps as 'time' field is not usable. -->
  <arg name="rpm" default="600." description="Velodyne sensor spinning speed."/>
  <arg name="timestamp_first_packet" default="false" description="If Velodyne timestamping is based on the first or last packet of each scan."/>

 <!-- Moving base coordinates systems description            tf_FROM_to_TO           X  Y  Z  rZ rY rX  FROM     TO -->
  <node pkg="tf2_ros" exec="static_transform_publisher" name="tf_base_to_lidar" args="--frame-id base_link --child-frame-id velodyne">
    <param name="use_sim_time" value="$(var use_sim_time)"/>
  </node>

  <!-- Rviz -->
  <group if="$(var rviz)">
    <node pkg="rviz2" exec="rviz2" name="rviz2"  args="-d $(find-pkg-share lidar_slam)/params/slam.rviz">
      <param name="use_sim_time" value="$(var use_sim_time)"/>
    </node>
  </group>

  <!-- Decode raw Velodyne packets to 3D points -->
  <group if="$(var vlp16_driver)">
    <!-- start nodelet manager and driver nodelets -->
    <group>
      <!-- <include file="$(find-pkg-share velodyne_driver)/launch/nodelet_manager.launch"/> -->
      <let name="device_ip"              value="$(var device_ip)"/>
      <let name="frame_id"               value="velodyne"/>
      <!-- <let name="manager"                value="velodyne_nodelet_manager" /> -->
      <let name="model"                  value="VLP16"/>
      <let name="pcap"                   value="$(var pcap)"/>
      <let name="port"                   value="$(var port)"/>
      <let name="read_fast"              value="false"/>
      <let name="read_once"              value="true"/>
      <let name="repeat_delay"           value="0.0"/>
      <let name="rpm"                    value="$(var rpm)"/>
      <let name="gps_time"               value="false"/>
      <let name="cut_angle"              value="0.0"/>
      <let name="timestamp_first_packet" value="$(var timestamp_first_packet)"/>
    </group>

    <!-- start transform nodelet -->
    <group>
      <let name="calibration"    value="$(find-pkg-share velodyne_pointcloud)/params/VLP16db.yaml"/>
      <!-- <let name="manager"        value="velodyne_nodelet_manager" /> -->
      <let name="fixed_frame"    value="" />
      <let name="target_frame"   value="" />
      <let name="max_range"      value="130.0"/>
      <let name="min_range"      value="0.4"/>
      <let name="organize_cloud" value="false"/>
    </group>
  </group>

  <!-- Velodyne points conversion -->
  <node name="velodyne_conversion" pkg="lidar_conversions" exec="velodyne_conversion_node" output="screen">
    <param name="use_sim_time" value="$(var use_sim_time)"/>
    <param name="rpm" value="$(var rpm)"/>
    <param name="timestamp_first_packet" value="$(var timestamp_first_packet)"/>
  </node>

  <!-- LiDAR SLAM : compute TF slam_init -> velodyne -->
  <group if="$(var outdoor)">
    <node name="lidar_slam" pkg="lidar_slam" exec="lidar_slam_node" output="screen">
      <param from="$(find-pkg-share lidar_slam)/params/slam_config_outdoor.yaml"/>
      <param name="use_sim_time" value="$(var use_sim_time)"/>
      <param name="gps/use_gps" value="$(var gps)"/>
      <remap from="tag_detections" to="$(var tags_topic)"/>
    </node>
  </group>


  <group unless="$(var outdoor)">
    <node name="lidar_slam" pkg="lidar_slam" exec="lidar_slam_node" output="screen">
      <param from="$(find-pkg-share lidar_slam)/params/slam_config_indoor.yaml"/>
      <param name="use_sim_time" value="$(var use_sim_time)"/>
      <param name="gps/use_gps" value="$(var gps)"/>
      <remap from="tag_detections" to="$(var tags_topic)"/>
    </node>
  </group>

  <!-- Launch GPS/UTM conversions nodes -->
  <group if="$(var gps)">
    <include file="$(find-pkg-share lidar_slam)/launch/gps_conversions.launch"/>
  </group>

</launch>