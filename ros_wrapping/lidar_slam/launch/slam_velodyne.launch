<launch>

  <!-- General args -->
  <arg name="use_sim_time" default="true" doc="Use simulation time when replaying rosbags with '--clock' option."/>
  <arg name="outdoor" default="true" doc="Decide which set of parameters to use"/>
  <arg name="rviz" default="true" doc="Visualize results with RViz."/>
  <arg name="gps" default="false" doc="If true, use GPS data to calibrate SLAM output. Otherwise, provide calibration."/>
  <arg name="tags_topic" default="tag_detections" doc="topic from which to get the tag measurements"/>
  <arg name="camera_topic" default="camera" doc="topic from which to get the rgb camera data"/>
  <arg name="camera_info_topic" default="camera_info" doc="topic from which to get the rgb camera info"/>
  <!-- Velodyne driver parameters -->
  <arg name="velodyne_driver" default="false" doc="If true, start Velodyne driver."/>
  <arg name="model" default="VLP16" doc="Model of Velodyne Lidar, choices are : VLP16 / 32E / 64E_S3 / 32C / VLS128"/>
  <arg name="device_ip" default="" />
  <arg name="port" default="2368" />
  <arg name="pcap" default="" />
  <arg name="calibration_file_path" default="$(find velodyne_pointcloud)/params/VLP16db.yaml" doc="calibration file path"/>
  <!-- Aggregation node -->
  <arg name="aggregate" default="false" doc="run aggregation node"/>

  <!-- Sim Time, used when replaying rosbag files (with mandatory option 'clock') -->
  <!-- /!\ if replaying pcap files use_sim_time must be false-->
  <param name="/use_sim_time" value="$(arg use_sim_time)"/>

  <!-- Rviz-->
  <group if="$(arg rviz)">
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find lidar_slam)/params/slam.rviz"/>
  </group>

  <!-- Decode raw Velodyne packets to 3D points -->
  <group if="$(arg velodyne_driver)">
    <!-- start nodelet manager and driver nodelets -->
    <include file="$(find velodyne_driver)/launch/nodelet_manager.launch">
      <arg name="device_ip"              value="$(arg device_ip)"/>
      <arg name="frame_id"               value="velodyne"/>
      <arg name="manager"                value="velodyne_nodelet_manager" />
      <arg name="model"                  value="$(arg model)"/>
      <arg name="pcap"                   value="$(arg pcap)"/>
      <arg name="port"                   value="$(arg port)"/>
      <arg name="read_fast"              value="false"/>
      <arg name="read_once"              value="true"/>
      <arg name="repeat_delay"           value="0.0"/>
      <arg name="rpm"                    value="600"/>
      <arg name="gps_time"               value="false"/>
      <arg name="cut_angle"              value="0.0"/>
      <arg name="timestamp_first_packet" value="false"/>
    </include>

    <!-- start transform nodelet -->
    <include file="$(find velodyne_pointcloud)/launch/transform_nodelet.launch">
      <arg name="model"          value="VLP16"/>
      <arg name="calibration"    value="$(arg calibration_file_path)"/>
      <arg name="manager"        value="velodyne_nodelet_manager" />
      <arg name="fixed_frame"    value="" />
      <arg name="target_frame"   value="" />
      <arg name="max_range"      value="130.0"/>
      <arg name="min_range"      value="0.4"/>
      <arg name="organize_cloud" value="false"/>
    </include>
  </group>

  <!-- Velodyne points conversion -->
  <node name="velodyne_conversion" pkg="lidar_conversions" type="velodyne_conversion_node" output="screen">
		<rosparam file="$(find lidar_conversions)/params/conversion_config.yaml" command="load"/>
  </node>

  <!-- LiDAR SLAM : compute TF slam_init -> velodyne -->
  <node name="lidar_slam" pkg="lidar_slam" type="lidar_slam_node" output="screen">
    <rosparam if="$(arg outdoor)" file="$(find lidar_slam)/params/slam_config_outdoor.yaml" command="load"/>
    <rosparam unless="$(arg outdoor)" file="$(find lidar_slam)/params/slam_config_indoor.yaml" command="load"/>
    <param name="gps/use_gps" value="$(arg gps)"/>
    <remap from="tag_detections" to="$(arg tags_topic)"/>
    <remap from="camera" to="$(arg camera_topic)"/>
    <remap from="camera_info" to="$(arg camera_info_topic)"/>
  </node>

  <!-- Launch GPS/UTM conversions nodes -->
  <group if="$(arg gps)">
    <include file="$(find lidar_slam)/launch/gps_conversions.launch"/>
  </group>

  <group if="$(arg aggregate)">
	  <!-- Aggregate points -->
	  <node name="aggregation" pkg="lidar_slam" type="aggregation_node" output="screen">
		<rosparam file="$(find lidar_slam)/params/aggregation_config.yaml" command="load"/>
	  </node>
  </group>

  <!-- Moving base coordinates systems description            tf_FROM_to_TO                X  Y  Z  rZ rY rX     FROM     TO -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_base_to_lidar"      args="0  0  0  0  0  0   base_link velodyne"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_base_to_gps"        args="0  0  0  0  0  0   base_link gps"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_base_to_wheel"      args="0  0  0  0  0  0   base_link wheel"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_base_to_ins"        args="0  0  0  0  0  0   base_link ins"/>

</launch>