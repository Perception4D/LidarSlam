<launch>
  <!-- General args -->
  <arg name="test_data"    default=""      description="Path to the test data"/>
  <arg name="res_path"     default="/tmp"  description="Path to the folder where to store the results"/>
  <arg name="ref_path"     default=""      description="Path to the reference data folder for results comparison"/>
  <arg name="outdoor"      default="true"  description="Decide which set of parameters to use"/>
  <arg name="vlp16"        default="false" description="If true, start Velodyne VLP16 transform node."/>
  <arg name="wait_init"    default="1"     description="Wait for test node initialization to replay data"/>
  <arg name="use_sim_time" default="true" description="Sim Time, used when replaying rosbag files"/>

  <!--  LiDAR pointclouds conversions args. These are only used to generate
        approximate point-wise timestamps if 'time' field is not usable).
        These parameters should be set to the same values as ROS Velodyne driver's. -->
  <arg name="rpm" default="600." description="Velodyne sensor spinning speed."/>
  <arg name="timestamp_first_packet" default="false" description="If Velodyne timestamping is based on the first or last packet of each scan."/>

  <!-- Decode raw Velodyne packets to 3D points -->
  <group if="$(var vlp16)">
  </group>

  <!-- Velodyne points conversion -->
  <node name="velodyne_conversion" pkg="lidar_conversions" exec="velodyne_conversion_node" output="screen">
    <param name="rpm" value="$(var rpm)"/>
    <param name="timestamp_first_packet" value="$(var timestamp_first_packet)"/>
    <param name="/use_sim_time" value="$(var use_sim_time)"/>
  </node>

  <!-- Test : catch outputs and compare with reference -->
  <group if="$(eval '\'$(var ref_path)\' == \'\'')">
    <node name="test" pkg="lidar_slam_test" exec="lidar_slam_test_node" output="screen">
      <param from="$(find-pkg-share lidar_slam_test)/params/eval.yaml"/>
      <param name="res_path" value="$(var res_path)"/>
      <param name="ref_path" value="$(var ref_path)"/>
      <param name="/use_sim_time" value="$(var use_sim_time)"/>
    </node>
  </group>
  <group unless="$(eval '\'$(var ref_path)\' == \'\'')">
    <node name="test" pkg="lidar_slam_test" exec="lidar_slam_test_node" output="screen">
      <param from="$(find-pkg-share lidar_slam_test)/params/eval.yaml"/>
      <param name="res_path" value="$(var res_path)"/>
      <param name="ref_path" value="$(var ref_path)"/>
      <param name="/use_sim_time" value="$(var use_sim_time)"/>
    </node>
  </group>

  <!-- LiDAR SLAM : compute TF slam_init -> velodyne -->
  <!-- for outdoor -->
  <group if="$(var outdoor)">
    <node name="lidar_slam" pkg="lidar_slam" exec="lidar_slam_node" output="screen">
      <param from="$(find-pkg-share lidar_slam)/params/slam_config_outdoor.yaml"/>
      <param name="slam/verbosity" value="0"/>
      <param name="/use_sim_time" value="$(var use_sim_time)"/>
    </node>
  </group>
  <!-- for indoor -->
  <group unless="$(var outdoor)">
    <node name="lidar_slam" pkg="lidar_slam" exec="lidar_slam_node" output="screen">
      <param from="$(find-pkg-share lidar_slam)/params/slam_config_indoor.yaml"/>
      <param name="slam/verbosity" value="0"/>
      <param name="/use_sim_time" value="$(var use_sim_time)"/>
    </node>
  </group>

  <!-- Moving base coordinates systems description            tf_FROM_to_TO           X  Y  Z  rZ rY rX  FROM     TO -->
  <node pkg="tf2_ros" exec="static_transform_publisher" name="tf_base_to_lidar" args="0  0  0  0  0  0 base_link velodyne">
    <param name="/use_sim_time" value="$(var use_sim_time)"/>
  </node>

  <!-- Play bag -->
  <executable cmd="ros2 bag play $(var test_data) --clock -d $(var wait_init)" output="screen"/>

</launch>
